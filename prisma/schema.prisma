// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }

model detail_penjualan {
  id                Int       @id @default(autoincrement())
  id_penjualan      Int
  id_produk         Int
  harga_beli        Decimal
  harga_jual        Decimal
  diskon            Decimal   @default(0)
  qty               Int
  event_produkId    Int?
  total_harga       Decimal
  tanggal_penjualan DateTime
  isDeleted         Boolean   @default(false)
  deletedAt         DateTime?

  event_produk event_produk? @relation(fields: [event_produkId], references: [id])
  penjualan    penjualan     @relation(fields: [id_penjualan], references: [id])
  produk       produk        @relation(fields: [id_produk], references: [id])
}

model penjualan {
  id                Int       @id @default(autoincrement())
  id_user           Int
  id_pelanggan      Int?
  diskon            Decimal
  total_harga       Decimal
  penyesuaian       Decimal   @default(0)
  total_bayar       Decimal
  kembalian         Decimal   @default(0)
  tanggal_penjualan DateTime
  isDeleted         Boolean   @default(false)
  deletedAt         DateTime?

  detail_penjualan detail_penjualan[]
  users            users              @relation(fields: [id_user], references: [id])
  pelanggan        pelanggan?         @relation(fields: [id_pelanggan], references: [id])
}

model produk {
  id          Int       @id @default(autoincrement())
  id_kategori Int
  nama_produk String
  harga_beli  Decimal
  harga_jual  Decimal
  stok        Int
  image       String
  barcode     String
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  isDeleted   Boolean   @default(false)
  deletedAt   DateTime?

  detail_penjualan detail_penjualan[]
  kategori         kategori           @relation(fields: [id_kategori], references: [id], onDelete: Cascade)
  stok_management  stok_management[]
  event_produk     event_produk[]
}

model stok_management {
  id         Int       @id @default(autoincrement())
  id_produk  Int
  stockIN    Int
  stockOut   Int
  created_at DateTime  @default(now())
  isDeleted  Boolean   @default(false)
  deletedAt  DateTime?

  produk produk @relation(fields: [id_produk], references: [id], onDelete: Cascade)
}

model kategori {
  id            Int       @id @default(autoincrement())
  nama_kategori String
  isDeleted     Boolean   @default(false)
  deletedAt     DateTime?

  produk produk[]
}

model pelanggan {
  id         Int       @id @default(autoincrement())
  nama       String    @unique
  alamat     String
  hp         String
  status     String
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  isDeleted  Boolean   @default(false)
  deletedAt  DateTime?

  penjualan penjualan[]
}

model users {
  id         Int       @id @default(autoincrement())
  nama_user  String
  username   String    @unique
  password   String
  user_priv  UserRole  @default(PETUGAS)
  alamat     String
  hp         String
  status     String
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  isDeleted  Boolean   @default(false)
  deletedAt  DateTime?

  penjualan penjualan[]
}

enum UserRole {
  ADMIN
  PETUGAS
}

model event {
  id              Int       @id @default(autoincrement())
  nama_event      String
  deskripsi       String?
  tanggal_mulai   DateTime
  tanggal_selesai DateTime
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt
  isDeleted       Boolean   @default(false)
  deletedAt       DateTime?

  event_produk event_produk[]
}

model event_produk {
  id         Int       @id @default(autoincrement())
  id_event   Int
  id_produk  Int
  diskon     Decimal
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  isDeleted  Boolean   @default(false)
  deletedAt  DateTime?

  detail_penjualan detail_penjualan[]
  event            event              @relation(fields: [id_event], references: [id], onDelete: Cascade)
  produk           produk             @relation(fields: [id_produk], references: [id], onDelete: Cascade)

  @@unique([id_event, id_produk])
}
