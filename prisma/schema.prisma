// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "mysql"
//   url      = env("DATABASE_URL")
// }

// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model detail_penjualan {
  id                Int      @id @default(autoincrement())
  id_penjualan      Int
  id_produk         Int
  harga_jual        Decimal
  qty               Int
  total_harga       Decimal
  tanggal_penjualan DateTime

  penjualan penjualan @relation(fields: [id_penjualan], references: [id])
  produk    produk    @relation(fields: [id_produk], references: [id])
}

model penjualan {
  id                Int      @id @default(autoincrement())
  id_user           Int
  id_pelanggan      Int
  diskon            Decimal
  total_harga       Decimal
  tanggal_penjualan DateTime

  detail_penjualan detail_penjualan[]
  users            users              @relation(fields: [id_user], references: [id])
  pelanggan        pelanggan          @relation(fields: [id_pelanggan], references: [id])
}

model produk {
  id          Int      @id @default(autoincrement())
  id_kategori Int
  nama_produk String
  harga_beli  Decimal
  harga_jual  Decimal
  stok        Int
  barcode     String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  detail_penjualan detail_penjualan[]
  kategori         kategori           @relation(fields: [id_kategori], references: [id], onDelete: Cascade)
  stok_management  stok_management[]
}

model stok_management {
  id        Int    @id @default(autoincrement())
  id_produk Int
  stockIN   Int
  stockOut  Int
  produk    produk @relation(fields: [id_produk], references: [id], onDelete: Cascade)
}

model kategori {
  id            Int    @id @default(autoincrement())
  nama_kategori String

  produk produk[]
}

model pelanggan {
  id         Int      @id @default(autoincrement())
  nama       String   @unique
  alamat     String
  hp         String
  status     String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  penjualan penjualan[]
}

model users {
  id         Int      @id @default(autoincrement())
  nama_user  String
  username   String   @unique
  password   String
  user_priv  UserRole @default(PETUGAS)
  alamat     String
  hp         String
  status     String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  penjualan penjualan[]
}

enum UserRole {
  ADMIN
  PETUGAS
}
